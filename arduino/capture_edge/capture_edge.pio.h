// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

#define CAPTURE_EDGE_IRQ_NUM 2
#define COUNTER_CYCLES 5

// ------------ //
// capture_edge //
// ------------ //

#define capture_edge_wrap_target 2
#define capture_edge_wrap 6
#define capture_edge_pio_version 0

#define capture_edge_offset_start 2u

static const uint16_t capture_edge_program_instructions[] = {
    0xc002, //  0: irq    nowait 2
    0x8020, //  1: push   block
            //     .wrap_target
    0xa041, //  2: mov    y, x
    0xa042, //  3: nop
    0xa042, //  4: nop
    0xa026, //  5: mov    x, isr
    0x00a0, //  6: jmp    x != y, 0
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program capture_edge_program = {
    .instructions = capture_edge_program_instructions,
    .length = 7,
    .origin = -1,
    .pio_version = capture_edge_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config capture_edge_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + capture_edge_wrap_target, offset + capture_edge_wrap);
    return c;
}
#endif

